name: Update Formula
on:
  repository_dispatch:
    types: [update-formula]

jobs:
  update-formula:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Checkout tap
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          fetch-depth: 0
          path: homebrew-git-flow-pro

      - name: Setup tap
        run: |
          TAP_PATH="$(brew --repo)/Library/Taps/chornthorn"
          sudo rm -rf "$TAP_PATH/homebrew-git-flow-pro"
          mkdir -p "$TAP_PATH"
          cp -r homebrew-git-flow-pro "$TAP_PATH/"
          cd "$TAP_PATH/homebrew-git-flow-pro" || exit 1
          brew tap --force chornthorn/git-flow-pro
          brew update

      - name: Verify Download and SHA256
        id: verify
        env:
          VERSION: ${{ github.event.client_payload.version }}
          SHA256: ${{ github.event.client_payload.sha256 }}
        run: |
          # Check if VERSION is provided
          if [ -z "${VERSION}" ]; then
            echo "Error: Version is not provided"
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "error_message=Version is not provided" >> $GITHUB_OUTPUT
            exit 1
          fi

          # Check if SHA256 is provided
          if [ -z "${SHA256}" ]; then
            echo "Error: SHA256 is not provided"
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "error_message=SHA256 is not provided" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "Checking version: v${VERSION}"
          echo "Expected SHA256: ${SHA256}"

          # Download the tarball and verify SHA256
          TARBALL_URL="https://github.com/chornthorn/git-flow-pro/archive/refs/tags/v${VERSION}.tar.gz"
          DOWNLOAD_PATH=$(mktemp -d)/git-flow-pro-v${VERSION}.tar.gz

          echo "Downloading from: $TARBALL_URL"
          if ! curl -L "$TARBALL_URL" -o "$DOWNLOAD_PATH"; then
            echo "Error: Failed to download from $TARBALL_URL"
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "error_message=Download failed" >> $GITHUB_OUTPUT
            exit 1
          fi

          ACTUAL_SHA256=$(sha256sum "$DOWNLOAD_PATH" | cut -d' ' -f1)
          echo "ACTUAL_SHA256=${ACTUAL_SHA256}" >> $GITHUB_ENV

          if [ "$ACTUAL_SHA256" != "$SHA256" ]; then
            echo "SHA256 mismatch!"
            echo "Expected: $SHA256"
            echo "Actual  : $ACTUAL_SHA256"
            echo "Download path: $DOWNLOAD_PATH"
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "actual_sha256=$ACTUAL_SHA256" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "SHA256 verification successful"
          echo "status=success" >> $GITHUB_OUTPUT
          echo "actual_sha256=$ACTUAL_SHA256" >> $GITHUB_OUTPUT

      - name: Update Formula
        if: steps.verify.outputs.status == 'success'
        env:
          VERSION: ${{ github.event.client_payload.version }}
          SHA256: ${{ github.event.client_payload.sha256 }}
        run: |
          cd "$(brew --repo)/Library/Taps/chornthorn/homebrew-git-flow-pro" || exit 1
          if [ -z "${VERSION}" ] || [ -z "${SHA256}" ]; then
            echo "Error: Version or SHA256 not provided"
            exit 1
          fi

          # Clear Homebrew cache
          rm -rf "$(brew --cache)"

          # Update the formula file
          sed -i.bak "s|url \"https://github.com/chornthorn/git-flow-pro/archive/refs/tags/v.*\.tar\.gz\"|url \"https://github.com/chornthorn/git-flow-pro/archive/refs/tags/v${VERSION}.tar.gz\"|" Formula/git-flow-pro.rb
          sed -i.bak "s|sha256 \"[a-fA-F0-9]*\"|sha256 \"${SHA256}\"|" Formula/git-flow-pro.rb

      - name: Verify Formula
        if: steps.verify.outputs.status == 'success'
        run: |
          cd "$(brew --repo)/Library/Taps/chornthorn/homebrew-git-flow-pro" || exit 1
          brew audit --strict --online git-flow-pro
          brew style git-flow-pro

      - name: Configure Git
        if: steps.verify.outputs.status == 'success'
        run: |
          cd "$(brew --repo)/Library/Taps/chornthorn/homebrew-git-flow-pro"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit Changes
        if: steps.verify.outputs.status == 'success'
        run: |
          cd "$(brew --repo)/Library/Taps/chornthorn/homebrew-git-flow-pro" || exit 1
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git add Formula/git-flow-pro.rb
          git commit -m "Update formula to version v${VERSION}"
          git push origin HEAD:main || exit 1

      - name: Create Pull Request
        if: failure() && steps.verify.outputs.status != 'failed'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          commit-message: "Update formula to version v${{ github.event.client_payload.version }}"
          title: "Update formula to version v${{ github.event.client_payload.version }}"
          body: |
            Automated update of Git Flow Pro formula to version v${{ github.event.client_payload.version }}

            SHA256: `${{ github.event.client_payload.sha256 }}`

            This PR was automatically created by GitHub Actions.
          branch: update-formula
          base: main
          delete-branch: true

      - name: Create Issue on SHA256 Mismatch
        if: failure() && steps.verify.outputs.status == 'failed'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          script: |
            const version = process.env.VERSION || 'unknown';
            const sha256 = process.env.SHA256 || 'unknown';
            const actualSha256 = process.env.ACTUAL_SHA256 || 'unknown';

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `SHA256 mismatch for version v${version}`,
              body: `SHA256 verification failed for version v${version}

              Expected SHA256: \`${sha256}\`
              Actual SHA256: \`${actualSha256}\`

              Please verify the correct SHA256 hash and update the workflow dispatch accordingly.
              
              You can calculate the correct SHA256 using:
              \`\`\`bash
              curl -L "https://github.com/chornthorn/git-flow-pro/archive/refs/tags/v${version}.tar.gz" | sha256sum
              \`\`\`
              
              Make sure to trigger the workflow with:
              \`\`\`bash
              curl -X POST \\
                -H "Authorization: token YOUR_GITHUB_TOKEN" \\
                -H "Accept: application/vnd.github.v3+json" \\
                https://api.github.com/repos/chornthorn/homebrew-git-flow-pro/dispatches \\
                -d '{
                  "event_type": "update-formula",
                  "client_payload": {
                    "version": "${version}",
                    "sha256": "CALCULATED_SHA256"
                  }
                }'
              \`\`\``,
              labels: ['bug', 'automation']
            });

      - name: Create Issue on Other Failures
        if: failure() && steps.verify.outputs.status != 'failed'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          script: |
            const version = process.env.VERSION || 'unknown';
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Formula update failed for version v${version}`,
              body: `The formula update workflow failed. Please check the logs for more details.

              Version: v${version}
              SHA256: ${process.env.SHA256 || 'unknown'}`,
              labels: ['bug', 'automation']
            });

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: brew-logs
          path: |
            ~/Library/Logs/Homebrew/
            $(brew --repo)/Library/Logs/Homebrew/

      - name: Cleanup
        if: always()
        continue-on-error: true
        run: |
          set +e
          TAP_PATH="$(brew --repo)/Library/Taps/chornthorn/homebrew-git-flow-pro"
          if [ -d "$TAP_PATH" ]; then
            sudo rm -rf "$TAP_PATH"
          fi
          brew cleanup
          brew untap chornthorn/git-flow-pro || true
